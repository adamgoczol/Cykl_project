<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="pl">
  <compounddef id="funkcje_8h" kind="file" language="C++">
    <compoundname>funkcje.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">set</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">sstream</includes>
    <includes local="no">map</includes>
    <includes local="no">algorithm</includes>
    <includedby refid="funkcje_8cpp" local="yes">funkcje.cpp</includedby>
    <includedby refid="main_8cpp" local="yes">main.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>funkcje.h</label>
        <link refid="funkcje_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>algorithm</label>
      </node>
      <node id="3">
        <label>fstream</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="9">
        <label>map</label>
      </node>
      <node id="4">
        <label>set</label>
      </node>
      <node id="8">
        <label>sstream</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="5">
        <label>utility</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>funkcje.cpp</label>
        <link refid="funkcje_8cpp"/>
      </node>
      <node id="1">
        <label>funkcje.h</label>
        <link refid="funkcje_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="funkcje_8h_1adfd30ded4fa0120db28ead55eb863549" prot="public" static="no">
        <type>std::map&lt; int, std::vector&lt; int &gt; &gt;</type>
        <definition>typedef std::map&lt;int, std::vector&lt;int&gt; &gt; Graph</definition>
        <argsstring></argsstring>
        <name>Graph</name>
        <briefdescription>
<para>mapa zwierajaca wierzcholki grafu skierowanego, np &apos;a&apos; -&gt; &apos;b&apos; oznacza ze &apos;a&apos; jest polaczone z &apos;b&apos;, a &apos;b&apos; z &apos;a&apos; juz nie </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="funkcje.h" line="25" column="18" bodyfile="funkcje.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="funkcje_8h_1ad8c44162d3ede8d55ed7c3993129c0e9" prot="public" static="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>typedef std::vector&lt;int&gt; Cycle</definition>
        <argsstring></argsstring>
        <name>Cycle</name>
        <briefdescription>
<para>vektor zawierajacy pojedynczy cykl z grafu skierowanego np (&apos;a&apos; -&gt; &apos;b&apos; -&gt; &apos;c&apos;, z czego cykl konczy sie na &apos;c&apos;, nie na &apos;a&apos;) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="funkcje.h" line="31" column="21" bodyfile="funkcje.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="funkcje_8h_1aa81f1eb15f43621436ef4db6f15466b1" prot="public" static="no">
        <type>std::vector&lt; <ref refid="funkcje_8h_1ad8c44162d3ede8d55ed7c3993129c0e9" kindref="member">Cycle</ref> &gt;</type>
        <definition>typedef std::vector&lt;Cycle&gt; Cycles</definition>
        <argsstring></argsstring>
        <name>Cycles</name>
        <briefdescription>
<para>vektor zawierajacy wszystkie cykle wystepujace w grafie skierowanym </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="funkcje.h" line="37" column="21" bodyfile="funkcje.h" bodystart="37" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="funkcje_8h_1ad7f071e2e1ca097856fa23f204e7dbd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isnumber</definition>
        <argsstring>(std::string &amp;text)</argsstring>
        <name>isnumber</name>
        <param>
          <type>std::string &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>funkcja sprawdza czy podany string mozna przekonwertowac na int </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>- string do sprawdzenia </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Adam Goczol </para>
</simplesect>
<simplesect kind="return"><para>true jesli sie da, false jesli nie </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="funkcje.h" line="46" column="6" bodyfile="funkcje.cpp" bodystart="9" bodyend="14" declfile="funkcje.h" declline="46" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="funkcje_8h_1a27c2e773ee9fe4285e472a2d5b3b4217" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool porownaj</definition>
        <argsstring>(std::vector&lt; int &gt; v1, std::vector&lt; int &gt; v2)</argsstring>
        <name>porownaj</name>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
<para>funkcja porownuje dwa vektory (uzywa sortowania) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v1</parametername>
</parameternamelist>
<parameterdescription>
<para>- pierwszy vektor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v2</parametername>
</parameternamelist>
<parameterdescription>
<para>- drugi vektor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true jesli sa identyczne, false jesli nie </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="funkcje.h" line="56" column="6" bodyfile="funkcje.cpp" bodystart="16" bodyend="21" declfile="funkcje.h" declline="56" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="funkcje_8h_1a8b4173825cfd79a623a343d01ee8f3de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="funkcje_8h_1adfd30ded4fa0120db28ead55eb863549" kindref="member">Graph</ref></type>
        <definition>Graph czytaj_graf</definition>
        <argsstring>(const std::string &amp;nazwa_pliku)</argsstring>
        <name>czytaj_graf</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>nazwa_pliku</declname>
        </param>
        <briefdescription>
<para>funkcja odczytuje zawartosc podanego pliku i konwertuje go na mape </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nazwa_pliku</parametername>
</parameternamelist>
<parameterdescription>
<para>- nazwa pliku z ktorego chcemy czytac </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mapa zawierajaca graf skierowany </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="funkcje.h" line="64" column="7" bodyfile="funkcje.cpp" bodystart="24" bodyend="60" declfile="funkcje.h" declline="64" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="funkcje_8h_1a2e8400cbfca88d600fcbe703366c1469" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool czy_nowy_cykl</definition>
        <argsstring>(const Cycles &amp;cycles, const Cycle &amp;cycle)</argsstring>
        <name>czy_nowy_cykl</name>
        <param>
          <type>const <ref refid="funkcje_8h_1aa81f1eb15f43621436ef4db6f15466b1" kindref="member">Cycles</ref> &amp;</type>
          <declname>cycles</declname>
        </param>
        <param>
          <type>const <ref refid="funkcje_8h_1ad8c44162d3ede8d55ed7c3993129c0e9" kindref="member">Cycle</ref> &amp;</type>
          <declname>cycle</declname>
        </param>
        <briefdescription>
<para>funkcja sprawdza czy podany cykl wystepuje w vektorze cyklow </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cycles</parametername>
</parameternamelist>
<parameterdescription>
<para>- vektor cyklow </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cycle</parametername>
</parameternamelist>
<parameterdescription>
<para>- pojedynczy vektor zawierajacy cykl </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true jesli nie wystepuje, false jesli wystepuje </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="funkcje.h" line="73" column="6" bodyfile="funkcje.cpp" bodystart="73" bodyend="78" declfile="funkcje.h" declline="73" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="funkcje_8h_1ae4e008b2ce4eb1ee6f62a7873ec10570" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wypisz_graf</definition>
        <argsstring>(const Graph &amp;graph)</argsstring>
        <name>wypisz_graf</name>
        <param>
          <type>const <ref refid="funkcje_8h_1adfd30ded4fa0120db28ead55eb863549" kindref="member">Graph</ref> &amp;</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
<para>funkcja wypisuje zawartosc mapy w postaci grafu skierowanego (x -&gt; y) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>graph</parametername>
</parameternamelist>
<parameterdescription>
<para>- mapa zawierajaca graf skierowany </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="funkcje.h" line="81" column="6" bodyfile="funkcje.cpp" bodystart="63" bodyend="70" declfile="funkcje.h" declline="81" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="funkcje_8h_1ae1a0acf88f57b3707ae80834482df172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="funkcje_8h_1aa81f1eb15f43621436ef4db6f15466b1" kindref="member">Cycles</ref></type>
        <definition>Cycles szukaj_cyklow</definition>
        <argsstring>(const Graph &amp;graph)</argsstring>
        <name>szukaj_cyklow</name>
        <param>
          <type>const <ref refid="funkcje_8h_1adfd30ded4fa0120db28ead55eb863549" kindref="member">Graph</ref> &amp;</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
<para>funkcja zwraca znalezione cykle w podanym grafie skierowanym </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>graph</parametername>
</parameternamelist>
<parameterdescription>
<para>- graf skierowany </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vektor zawierajacy znalezione cykle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="funkcje.h" line="89" column="8" bodyfile="funkcje.cpp" bodystart="81" bodyend="94" declfile="funkcje.h" declline="89" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="funkcje_8h_1a158b2a646e35abe8080ea5bd158885ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void podszukanie</definition>
        <argsstring>(const Graph &amp;graph, const int starting, int node, Cycles &amp;cycles, Cycle cycle, std::set&lt; int &gt; visited, int depth)</argsstring>
        <name>podszukanie</name>
        <param>
          <type>const <ref refid="funkcje_8h_1adfd30ded4fa0120db28ead55eb863549" kindref="member">Graph</ref> &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>starting</declname>
        </param>
        <param>
          <type>int</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="funkcje_8h_1aa81f1eb15f43621436ef4db6f15466b1" kindref="member">Cycles</ref> &amp;</type>
          <declname>cycles</declname>
        </param>
        <param>
          <type><ref refid="funkcje_8h_1ad8c44162d3ede8d55ed7c3993129c0e9" kindref="member">Cycle</ref></type>
          <declname>cycle</declname>
        </param>
        <param>
          <type>std::set&lt; int &gt;</type>
          <declname>visited</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
<para>rekurencyjna funkcja znajdujaca cykle w grafie o podanym poczatku </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>graph</parametername>
</parameternamelist>
<parameterdescription>
<para>- graf skierowany </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>starting</parametername>
</parameternamelist>
<parameterdescription>
<para>- poczatek ktory musi byc koncem cyklu </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>- aktualnie sprawdzana krawedz grafu skierowanego </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cycles</parametername>
</parameternamelist>
<parameterdescription>
<para>- vektor zawierajacy znalezione cykle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cycle</parametername>
</parameternamelist>
<parameterdescription>
<para>- aktualnie sprawdzany cykl </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>visited</parametername>
</parameternamelist>
<parameterdescription>
<para>- odwiedzone krawedzie </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>depth</parametername>
</parameternamelist>
<parameterdescription>
<para>- glebokosc rekurencji </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="funkcje.h" line="102" column="6" bodyfile="funkcje.cpp" bodystart="97" bodyend="121" declfile="funkcje.h" declline="102" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="funkcje_8h_1a9f67ac023a1569352a7410b28a6b2f4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wyswietl_cykle</definition>
        <argsstring>(const Cycles &amp;cycles)</argsstring>
        <name>wyswietl_cykle</name>
        <param>
          <type>const <ref refid="funkcje_8h_1aa81f1eb15f43621436ef4db6f15466b1" kindref="member">Cycles</ref> &amp;</type>
          <declname>cycles</declname>
        </param>
        <briefdescription>
<para>funkcja wyswietla podany vektor cyklow </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cycles</parametername>
</parameternamelist>
<parameterdescription>
<para>- vektor zawierajacy cykle do wyswietlenia </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="funkcje.h" line="110" column="6" bodyfile="funkcje.cpp" bodystart="124" bodyend="136" declfile="funkcje.h" declline="110" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="funkcje_8h_1a9db5b459e15e8df304d7a7396c4a369e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zapisz_cykle</definition>
        <argsstring>(const Cycles &amp;cycles, const std::string filename)</argsstring>
        <name>zapisz_cykle</name>
        <param>
          <type>const <ref refid="funkcje_8h_1aa81f1eb15f43621436ef4db6f15466b1" kindref="member">Cycles</ref> &amp;</type>
          <declname>cycles</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>funkcja zapisuje podany vektor cyklow do pliku </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cycles</parametername>
</parameternamelist>
<parameterdescription>
<para>- vektor zawierajacy cykle do zapisania </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>- nazwa pliku </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="funkcje.h" line="118" column="6" bodyfile="funkcje.cpp" bodystart="139" bodyend="160" declfile="funkcje.h" declline="118" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>plik zawiera deklaracje funkcji </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Adam Goczol </para>
</simplesect>
<simplesect kind="date"><para>13.01.2024 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FUNKCJE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FUNKCJE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="funkcje_8h_1adfd30ded4fa0120db28ead55eb863549" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;int,<sp/>std::vector&lt;int&gt;&gt;<sp/><ref refid="funkcje_8h_1adfd30ded4fa0120db28ead55eb863549" kindref="member">Graph</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="funkcje_8h_1ad8c44162d3ede8d55ed7c3993129c0e9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/><ref refid="funkcje_8h_1ad8c44162d3ede8d55ed7c3993129c0e9" kindref="member">Cycle</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="funkcje_8h_1aa81f1eb15f43621436ef4db6f15466b1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;Cycle&gt;<sp/><ref refid="funkcje_8h_1aa81f1eb15f43621436ef4db6f15466b1" kindref="member">Cycles</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="funkcje_8h_1ad7f071e2e1ca097856fa23f204e7dbd0" kindref="member">isnumber</ref>(std::string&amp;<sp/>text);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="funkcje_8h_1a27c2e773ee9fe4285e472a2d5b3b4217" kindref="member">porownaj</ref>(std::vector&lt;int&gt;<sp/>v1,<sp/>std::vector&lt;int&gt;<sp/>v2);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="funkcje_8h_1adfd30ded4fa0120db28ead55eb863549" kindref="member">Graph</ref><sp/><ref refid="funkcje_8h_1a8b4173825cfd79a623a343d01ee8f3de" kindref="member">czytaj_graf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>nazwa_pliku);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="funkcje_8h_1a2e8400cbfca88d600fcbe703366c1469" kindref="member">czy_nowy_cykl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="funkcje_8h_1aa81f1eb15f43621436ef4db6f15466b1" kindref="member">Cycles</ref>&amp;<sp/>cycles,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="funkcje_8h_1ad8c44162d3ede8d55ed7c3993129c0e9" kindref="member">Cycle</ref>&amp;<sp/>cycle);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="funkcje_8h_1ae4e008b2ce4eb1ee6f62a7873ec10570" kindref="member">wypisz_graf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="funkcje_8h_1adfd30ded4fa0120db28ead55eb863549" kindref="member">Graph</ref>&amp;<sp/>graph);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="funkcje_8h_1aa81f1eb15f43621436ef4db6f15466b1" kindref="member">Cycles</ref><sp/><ref refid="funkcje_8h_1ae1a0acf88f57b3707ae80834482df172" kindref="member">szukaj_cyklow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="funkcje_8h_1adfd30ded4fa0120db28ead55eb863549" kindref="member">Graph</ref>&amp;<sp/>graph);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="funkcje_8h_1a158b2a646e35abe8080ea5bd158885ab" kindref="member">podszukanie</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="funkcje_8h_1adfd30ded4fa0120db28ead55eb863549" kindref="member">Graph</ref>&amp;<sp/>graph,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>starting,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="funkcje_8h_1aa81f1eb15f43621436ef4db6f15466b1" kindref="member">Cycles</ref>&amp;<sp/>cycles,<sp/><ref refid="funkcje_8h_1ad8c44162d3ede8d55ed7c3993129c0e9" kindref="member">Cycle</ref><sp/>cycle,<sp/>std::set&lt;int&gt;<sp/>visited,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="funkcje_8h_1a9f67ac023a1569352a7410b28a6b2f4d" kindref="member">wyswietl_cykle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="funkcje_8h_1aa81f1eb15f43621436ef4db6f15466b1" kindref="member">Cycles</ref>&amp;<sp/>cycles);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="funkcje_8h_1a9db5b459e15e8df304d7a7396c4a369e" kindref="member">zapisz_cykle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="funkcje_8h_1aa81f1eb15f43621436ef4db6f15466b1" kindref="member">Cycles</ref>&amp;<sp/>cycles,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>filename);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!FUNKCJE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="funkcje.h"/>
  </compounddef>
</doxygen>
